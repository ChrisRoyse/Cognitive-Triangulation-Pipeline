# ===========================================
# CTP - Environment Configuration Example
# ===========================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env files to version control!

# Node.js Environment
NODE_ENV=development

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# Neo4j Configuration
# Note: Neo4j runs locally on Neo4j Desktop
# When running the app in Docker, Neo4j URI is handled in docker-compose.yml
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=your-super-secure-neo4j-password-here
NEO4J_DATABASE=ctp
NEO4J_HTTP_PORT=7474
NEO4J_BOLT_PORT=7687

# Redis Configuration  
REDIS_PORT=6379
REDIS_ADMIN_USER=admin
REDIS_ADMIN_PASSWORD=secure-redis-admin-password
REDIS_ENABLED=true
REDIS_URL=redis://localhost:6379

# ===========================================
# API KEYS & SECRETS
# ===========================================

# DeepSeek API Key (Get from https://platform.deepseek.com/)
DEEPSEEK_API_KEY=sk-your-actual-api-key-here

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================

# Application Settings
APP_PORT=3002
LOG_LEVEL=info
MAX_WORKERS=10
BATCH_SIZE=50

# Source Directory (directory to analyze)
SOURCE_DIR=./polyglot-test

# ===========================================
# CACHE CONFIGURATION
# ===========================================

# Cache Settings
CACHE_ENABLED=true
CACHE_DEFAULT_TTL=86400
CACHE_MAX_SIZE=1000000

# ===========================================
# MONITORING & ADMIN (Optional)
# ===========================================

# Prometheus
PROMETHEUS_PORT=9090

# Redis Admin
REDIS_ADMIN_PORT=8081

# ===========================================
# PRODUCTION OVERRIDES
# ===========================================
# For production deployment, consider:
# - Using Docker secrets instead of environment variables
# - Setting up proper SSL certificates
# - Configuring firewall rules
# - Setting up log aggregation
# - Implementing proper backup strategies