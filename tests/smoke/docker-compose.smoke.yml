# Docker Compose configuration for running smoke tests locally
# Usage: docker-compose -f tests/smoke/docker-compose.smoke.yml up -d

version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: ctp-smoke-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - ctp-smoke-network

  neo4j:
    image: neo4j:5-community
    container_name: ctp-smoke-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/test1234
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      NEO4J_dbms_memory_pagecache_size: 512M
      NEO4J_dbms_memory_heap_max__size: 512M
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "test1234", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - neo4j-smoke-data:/data
      - neo4j-smoke-logs:/logs
    networks:
      - ctp-smoke-network

  smoke-tests:
    build:
      context: ../..
      dockerfile: Dockerfile
    container_name: ctp-smoke-tests
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    environment:
      NODE_ENV: test
      REDIS_URL: redis://redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: test1234
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      SQLITE_DB_PATH: /app/data/test.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: npm run test:smoke
    networks:
      - ctp-smoke-network

networks:
  ctp-smoke-network:
    driver: bridge

volumes:
  neo4j-smoke-data:
  neo4j-smoke-logs: